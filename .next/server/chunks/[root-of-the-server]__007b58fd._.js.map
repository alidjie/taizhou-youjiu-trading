{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///home/ubuntu/taizhou-youjiu-trading/src/app/api/inquiries/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\n\n// 模拟数据库存储（实际应用中应使用真实数据库）\nlet inquiries: any[] = [];\n\n// POST /api/inquiries - 提交新询盘\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    \n    // 验证必需字段\n    const requiredFields = ['customerName', 'email', 'country', 'message'];\n    for (const field of requiredFields) {\n      if (!body[field]) {\n        return NextResponse.json(\n          { success: false, error: `Missing required field: ${field}` },\n          { status: 400 }\n        );\n      }\n    }\n\n    // 验证邮箱格式\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(body.email)) {\n      return NextResponse.json(\n        { success: false, error: 'Invalid email format' },\n        { status: 400 }\n      );\n    }\n\n    // 创建新询盘\n    const newInquiry = {\n      id: `inquiry-${Date.now()}`,\n      customerName: body.customerName,\n      email: body.email,\n      phone: body.phone || null,\n      company: body.company || null,\n      country: body.country,\n      productId: body.productId || null,\n      productName: body.productName || null,\n      quantity: body.quantity || null,\n      message: body.message,\n      status: 'new',\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n\n    // 保存到模拟数据库\n    inquiries.push(newInquiry);\n\n    // 在实际应用中，这里应该：\n    // 1. 保存到真实数据库\n    // 2. 发送确认邮件给客户\n    // 3. 发送通知邮件给销售团队\n    // 4. 可能触发自动报价流程\n\n    return NextResponse.json({\n      success: true,\n      data: {\n        id: newInquiry.id,\n        message: 'Inquiry submitted successfully. We will contact you within 24 hours.'\n      }\n    }, { status: 201 });\n  } catch (error) {\n    console.error('Error creating inquiry:', error);\n    return NextResponse.json(\n      { success: false, error: 'Failed to submit inquiry' },\n      { status: 500 }\n    );\n  }\n}\n\n// GET /api/inquiries - 获取所有询盘（管理员功能）\nexport async function GET(request: NextRequest) {\n  try {\n    const { searchParams } = new URL(request.url);\n    const status = searchParams.get('status');\n    const page = parseInt(searchParams.get('page') || '1');\n    const limit = parseInt(searchParams.get('limit') || '10');\n\n    let filteredInquiries = [...inquiries];\n\n    // 按状态筛选\n    if (status) {\n      filteredInquiries = filteredInquiries.filter(inquiry => inquiry.status === status);\n    }\n\n    // 分页\n    const startIndex = (page - 1) * limit;\n    const endIndex = startIndex + limit;\n    const paginatedInquiries = filteredInquiries.slice(startIndex, endIndex);\n\n    return NextResponse.json({\n      success: true,\n      data: paginatedInquiries,\n      pagination: {\n        page,\n        limit,\n        total: filteredInquiries.length,\n        totalPages: Math.ceil(filteredInquiries.length / limit)\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching inquiries:', error);\n    return NextResponse.json(\n      { success: false, error: 'Failed to fetch inquiries' },\n      { status: 500 }\n    );\n  }\n}\n\n"],"names":[],"mappings":";;;;AAAA;;AAEA,yBAAyB;AACzB,IAAI,YAAmB,EAAE;AAGlB,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAE/B,SAAS;QACT,MAAM,iBAAiB;YAAC;YAAgB;YAAS;YAAW;SAAU;QACtE,KAAK,MAAM,SAAS,eAAgB;YAClC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAChB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;oBAAE,SAAS;oBAAO,OAAO,CAAC,wBAAwB,EAAE,OAAO;gBAAC,GAC5D;oBAAE,QAAQ;gBAAI;YAElB;QACF;QAEA,SAAS;QACT,MAAM,aAAa;QACnB,IAAI,CAAC,WAAW,IAAI,CAAC,KAAK,KAAK,GAAG;YAChC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;gBAAO,OAAO;YAAuB,GAChD;gBAAE,QAAQ;YAAI;QAElB;QAEA,QAAQ;QACR,MAAM,aAAa;YACjB,IAAI,CAAC,QAAQ,EAAE,KAAK,GAAG,IAAI;YAC3B,cAAc,KAAK,YAAY;YAC/B,OAAO,KAAK,KAAK;YACjB,OAAO,KAAK,KAAK,IAAI;YACrB,SAAS,KAAK,OAAO,IAAI;YACzB,SAAS,KAAK,OAAO;YACrB,WAAW,KAAK,SAAS,IAAI;YAC7B,aAAa,KAAK,WAAW,IAAI;YACjC,UAAU,KAAK,QAAQ,IAAI;YAC3B,SAAS,KAAK,OAAO;YACrB,QAAQ;YACR,WAAW,IAAI;YACf,WAAW,IAAI;QACjB;QAEA,WAAW;QACX,UAAU,IAAI,CAAC;QAEf,eAAe;QACf,cAAc;QACd,eAAe;QACf,iBAAiB;QACjB,gBAAgB;QAEhB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,MAAM;gBACJ,IAAI,WAAW,EAAE;gBACjB,SAAS;YACX;QACF,GAAG;YAAE,QAAQ;QAAI;IACnB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAO,OAAO;QAA2B,GACpD;YAAE,QAAQ;QAAI;IAElB;AACF;AAGO,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;QAC5C,MAAM,SAAS,aAAa,GAAG,CAAC;QAChC,MAAM,OAAO,SAAS,aAAa,GAAG,CAAC,WAAW;QAClD,MAAM,QAAQ,SAAS,aAAa,GAAG,CAAC,YAAY;QAEpD,IAAI,oBAAoB;eAAI;SAAU;QAEtC,QAAQ;QACR,IAAI,QAAQ;YACV,oBAAoB,kBAAkB,MAAM,CAAC,CAAA,UAAW,QAAQ,MAAM,KAAK;QAC7E;QAEA,KAAK;QACL,MAAM,aAAa,CAAC,OAAO,CAAC,IAAI;QAChC,MAAM,WAAW,aAAa;QAC9B,MAAM,qBAAqB,kBAAkB,KAAK,CAAC,YAAY;QAE/D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,MAAM;YACN,YAAY;gBACV;gBACA;gBACA,OAAO,kBAAkB,MAAM;gBAC/B,YAAY,KAAK,IAAI,CAAC,kBAAkB,MAAM,GAAG;YACnD;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAO,OAAO;QAA4B,GACrD;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}